///  main: _module.scss
///  ==========================================================================
///  Base styles section
///  ==========================================================================

:root {
  --app-background: #{color('primary-4')};
  --app-border-color: hsl(0, 0%, 39%, .3);
  --app-border-style: solid;
  --app-border-width: .1rem;
  --app-font-size: 62.5%;
}

// border-box everywhere!
* {
  &,
  &::before,
  &::after {
    box-sizing: border-box;
  }
}

// Really trying to target everything here
// Using root for higher specificity
html,
body,
button,
input,
select,
textarea,
::-webkit-input-placeholder {
  font-family: var('font-base') !important;
}

// This is so we can use 1rem : 10px
html {
  font-size: var('app-font-size') !important;
}

html,
body {
  height: 100%;
  background: var(--app-background);
  text-rendering: optimizeLegibility;
}

// Links
a,
.anchor-3Z-8Bb {
  color: var(--link-color);
}

#{classes('base.app')} {
  transition: transform 500ms cubic-bezier(0.17, 0.04, 0.03, 0.94);
  // Adding transform and transition for the quick access menu animation
  transform: translate3d(0, 0, 0);
  &::after {
    @include size(100vw, 100vh);
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
    pointer-events: none;
    background: color('black', .5);
    opacity: 0;
    transition: opacity 0.5s;
  }
  @at-root .quickAccessMenu.opened ~ & {
    &::after {
      opacity: 1;
    }
  }
}

.disabled,
button:disabled,
button:disabled:hover,
input:disabled,
input:disabled:hover,
textarea:disabled,
textarea:disabled:hover {
  pointer-events: all !important;
  cursor: not-allowed !important;
}

.strong,
strong {
  font-weight: 700;
}

// Avatar + status svg mask container
.mask-1l8v16 {
  overflow: visible;
  foreignObject {
    mask: none;
  }
}

// Direct child of app container div
.layer-3QrUeG {
  top: 0 !important;
  padding: 0 !important;
  // Guilds Wrapper outer container
  .container-2lgZY8 {
    display: flex;
    background: none;
  }
}

// To immitate Twitch's gray border around the app
body {
  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    // Should be the highest z-index
    // It goes above everything, including modals
    z-index: var('z-index-app');
    pointer-events: none;
    border: var('app-border-width') var('app-border-style') var('app-border-color');
  }
}

// Early loading BG fix, connection background
.loading-Ags1CY,
.appMount-3lHmkl,
.app-1q1i1E > div[style*='background-color: rgb(47, 49, 54)'] {
  background: var(--app-background) !important;
  opacity: 1 !important;
}

// Just in case it isn't margin-left: 0
// Guilds wrapper direct sibling div
#{classes('base.base')} {
  position: relative;
  left: 0;
  width: 100%;
  margin-left: 0 !important;
  border-radius: 0 !important;
}

// Not entirely sure what this is for,
// maybe Discord uses it as a fallback background
// for the app?
#{classes('base.bg')} {
  display: none;
}

// Text used throughout the app
// Settings switch labels
.title-31JmR4,
.primary-jw0I4K,
.h3-3PDeKG {
  @include component('header', 'h7');
}
// Minor text descriptions
.description-3_Ncsb,
.labelDescriptor-1PqHgD {
  @include component('header', 'h7');
  color: color('tint-7') !important;
}
// Used for headings all over Discord, namely settings and modals
.h2-2gWE-o {
  @include component('header', 'h4');
  text-transform: capitalize;
}
// Used for sub text
// https://i.imgur.com/VSkLGxy.png
.h5-18_1nd,
.label-wQQoIq {
  @include component('header', 'h6');
  text-transform: capitalize;
}


// Image error "poop"
.imageError-2OefUi {
  width: 100%;
  height: 100%;
  background: icon('twitchcord-dead') no-repeat center / 50%,
  radial-gradient(circle at center, color('primary-8'), color('primary-7')) !important;
}

// Image zoom images
#{$imagezoom} {
  cursor: zoom-in !important;
}

// Mentions indicator container for guilds and channels
#{classes('base.unreadBar.bar')} {
  @include component('unread-bar', 'messages', 'base');
  display: none;
  // Active when the user has an unread mention
  &#{classes('base.unreadBar.mention')} {
    @include component('unread-bar', 'mentions');
    display: flex;
  }
  &:active {
    top: 0;
  }
  // Down and up arrow icons on unread mentions indicators
  #{classes('base.unreadBar.icon')} {
    display: none;
  }
}