// main: _module.scss
// ==========================================================================
//  Context menus
// ==========================================================================

:root {
  --context-menu-background: var(--component-background);
  --context-menu-border-color: #{color('white', .05)};
  --context-menu-border-style: solid;
  --context-menu-border-width: .1rem;
  --context-menu-border-radius: var(--component-border-radius);
  --context-menu-box-shadow: var(--component-box-shadow);
  --context-menu-width: 20rem;
  --context-menu-z-index: 99999999;
  --context-menu-animation: var(--disable-animations, var(--disable-context-menu-animation, none)); // contextMenuAppear 3s cubic-bezier(0.4, 0, 0.2, 1) forwards

  --context-menu-item-height: 3.4rem;

  --context-menu-sub-menu-arrow-icon-size: 2rem;
}

.subMenuContext-2n_9YM {
  margin-left: -1.2rem;
}

// Context menu
#{$contextmenu} {
  z-index: var(--context-menu-z-index);
  width: var(--context-menu-width);
  margin: 0;
  padding: 0;
  background: var(--context-menu-background) !important;
  border-color: var(--context-menu-border-color) !important;
  border-style: var(--context-menu-border-style) !important;
  border-width: var(--context-menu-border-width) !important;
  border-radius: var(--context-menu-border-radius) !important;
  box-shadow: var(--context-menu-box-shadow) !important;
  animation: var(--context-menu-animation);
  // animation: contextMenuAppear 267ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
  // Item that shows a new context menu on hover
  #{$contextmenuitemsubmenu} {
    @include ellipsis($display: flex);
    position: relative;
    padding-right: 30px !important;
    background: none !important;
    &::after {
      @include mask(icon('caret-down'), color('tint-11'));
      @include size(var(--context-menu-sub-menu-arrow-icon-size));
      content: '';
      position: absolute;
      top: calc((var(--context-menu-item-height) - var(--context-menu-sub-menu-arrow-icon-size)) / 2);
      right: 1.2rem;
    }
  }
  // Context menu inside an left side context menu
  &#{$contextmenuinvertchildx} & {
    margin-left: calc(var(--context-menu-width) * -1 - .5rem);
  }

  // Context menu inside a context menu
  & & {
    margin-left: calc(var(--context-menu-width) + .5rem);
  }
  // Roles sub context menu is an observed example... When the structure is
  // <contextMenu>
  //    <item></item>
  //    <item></item>
  // </contextMenu>
  > div:first-of-type:is(.item-1Yvehc) {
    margin-top: .8rem;
  }
  > div:last-of-type:is(.item-1Yvehc) {
    margin-bottom: .8rem;
  }
  #{$scroller} {
    padding: .8rem 0;
    overflow-y: auto;
    &::-webkit-scrollbar,
    &::-webkit-scrollbar-thumb,
    &::-webkit-scrollbar-track {
      visibility: hidden;
    }
    &:hover {
      &::-webkit-scrollbar,
      &::-webkit-scrollbar-thumb,
      &::-webkit-scrollbar-track {
        visibility: visible;
      }
    }
  }
  // Context menu inside a context menu inside a context menu
  & & & {
    //margin-left: 191px;
  }
  // Context menu inside a context menu inside a context menu inside a context menu
  & & & & {
    //margin-left: 170px;
  }
  // Discord side arrow carat for submenu items
  .caret-UIZBlm {
    display: none;
  }
  #{$contextmenuitembase} {
    display: flex;
    align-items: center;
    width: 100%;
    margin: 0;
    padding: 5px 14px;
    overflow: hidden;
    font-size: 1.2rem;
    font-weight: 400;
    line-height: 2.4rem;
    color: color('tint-11');
    white-space: nowrap;
    list-style-type: none;
    border-radius: var(--context-item-roundness);
    &:hover,
    &:hover:active,
    &:active {
      color: color('white') !important;
      background: color('primary-6') !important;
      #{$contextmenuhint} {
        color: color('white');
      }
    }
    // Normal context items
    // &:not([style*="color: rgb"]) {
    //   &:hover,
    //   &:hover:active,
    //   &:active {
    //     background: color('primary-6')!important;
    //     color: color('white')!important;
    //   }
    // }
    // Role context items
    // &[style*="color: rgb"] {
    //   &:hover,
    //   &:hover:active,
    //   &:active {
    //     background: currentColor!important;
    //     > span,
    //     > #{$contextmenulabel} {
    //       filter: grayscale(1) brightness(5);
    //     }
    //   }
    // }
    span {
      flex: 1;
      padding-right: 10px;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    // Every context item except volume slider
    &:not(#{$contextmenuitemslider}) {
      cursor: pointer;
    }
    // Kick, ban, leave server, etc. Red items.
    &#{$contextmenuitemdanger} {
      color: color('danger') !important;
      &:hover,
      &:active,
      &:hover:active {
        color: #fff !important;
        background: color('danger') !important;
      }
    }
    // Disabled context items
    &#{$contextmenuitemdisabled} {
      color: color('tint-7') !important;
      cursor: not-allowed;
      background: none !important;
      opacity: 0.5;
      &::before {
        background-color: color('tint-7') !important;
        opacity: 0.5;
      }
      &:hover,
      &:active,
      &:hover:active {
        color: color('tint-7') !important;
        cursor: not-allowed;
        background: none !important;
        &::before {
          background-color: color('tint-7') !important;
          opacity: 0.5;
        }
      }
    }
    // Volume slider item
    &#{$contextmenuitemslider} {
      flex-wrap: wrap;
      overflow: visible;
      // Needed for specificity reasons
      &,
      &.tc-contextItem {
        &:hover,
        &:hover:active,
        &:active {
          color: color('tint-11') !important;
          background: var(--context-menu-color) !important;
          &::before {
            background-color: color('tint-11') !important;
          }
        }
      }
      // Volume % tooltip
      #{$bubble} {
        left: -2rem;
        width: 5rem;
        padding: var(--tooltip-padding);
        overflow: visible;
      }
      // "User Volume" label
      #{$contextmenulabel} {
        display: inline-flex;
        margin-bottom: .6rem;
      }
    }
    &#{$contextmenuitembrand} {
      color: color('tint-11') !important;
    }
    // Conext menu custom icons
    &#{classes('twitchcord.contextItem')} {
      // Disabled context items
      // Needed for specificity reasons
      &#{$contextmenuitemdisabled} {
        &::before {
          background-color: color('tint-7') !important;
        }
        &:hover,
        &:hover:active,
        &:active {
          &::before {
            background-color: color('tint-7') !important;
          }
        }
      }
      &#{$contextmenuitemdanger} {
        &::before {
          background-color: color('danger');
        }
      }
      // Context item pseudoelement; base for icons
      &::before {
        @include size(20px);
        content: '';
        display: inline-block;
        min-width: 20px;
        margin-right: 14px;
        background-color: color('tint-11');
      }
      // Context item hover
      &:hover {
        &::before {
          background-color: color('white') !important;
        }
      }
      &.context {
        &-mark-as-read,
        &-server-folder-mark-as-read,
        &-spellcheck {
          &::before {
            @include mask(icon('checkmark'));
          }
        }
        &-change-icon {
          &::before {
            @include mask(icon('upload-profile-image'), $size: 24px, $important: true);
          }
        }
        &-server-folder-settings {
          &::before {
            @include mask(icon('folder-opened'), $size: 1.8rem, $important: true);
          }
        }
        &-invite-people,
        &-instant-invite,
        &-instant-invites,
        &-invite-to-server,
        &-add-friend,
        &-add-friend-button-after {
          &::before {
            @include mask(icon('user-add'), $important: true);
            margin-right: 1.2rem;
            margin-left: .2rem;
          }
        }
        &-server-mute,
        &-mute-channel {
          &::before {
            @include mask(icon('notification-off'));
          }
        }
        &-languages {
          &::before {
            @include mask(icon('language'), $size: 20px, $important: true);
          }
        }
        &-paste {
          &::before {
            @include mask(icon('paste'), $size: 17px, $important: true);
          }
        }
        &-user-volume {
          &::before {
            @include mask(icon('volume'), $size: 25px, $important: true);
            margin-top: -6px;
          }
        }
        &-guild-settings-action-filter-channel-create,
        &-create-text-channel,
        &-create-voice-channel {
          &::before {
            @include mask(icon('plus'));
          }
        }
        &-create-category {
          &::before {
            @include mask(icon('list-add'), $size: 2.2rem, $important: true);
          }
        }
        &-server-settings {
          &::before {
            @include mask(icon('gear'));
          }
        }
        &-application-context-menu-toggle-overlay-disable,
        &-screenshare-stop {
          &::before {
            @include mask(icon('overlay-off'));
            transform: scale(-1, 1);
          }
        }
        &-game-action-button-view-in-store {
          &::before {
            @include mask(icon('nitro'), $size: 22px, $important: true);
          }
        }
        &-game-action-button-install {
          &::before {
            @include mask(icon('download'));
          }
        }
        &-mark-unread {
          &::before {
            @include mask(icon('eye-opened'));
          }
        }
        &-hide-muted-channels,
        &-voice-channel-hide-names,
        &-application-context-menu-hide-status,
        &-application-context-menu-hide,
        &-spoiler-mark-selected {
          &::before {
            @include mask(icon('eye-closed'));
          }
        }
        &-notification-settings {
          &::before {
            @include mask(icon('exclamation-circle'), $size: 1.7rem, $important: true);
          }
        }
        &-privacy-settings {
          &::before {
            @include mask(icon('lock'), $size: 20px, $important: true);
          }
        }
        &-mention {
          &::before {
            @include mask(icon('mention'), $size: 1.8rem, $important: true);
          }
        }
        &-user-popout-message {
          &::before {
            @include mask(icon('mail'), $size: 1.6rem, $important: true);
          }
        }
        &-mute {
          &::before {
            @include mask(icon('microphone-off'), $size: 2rem, $important: true);
          }
        }
        &-deafen {
          &::before {
            @include mask(icon('headphones-off'), $size: 18px, $important: true);
          }
        }
        &-kick-from-server {
          &::before {
            @include mask(icon('kick'), $size: 20px, $important: true);
          }
        }
        &-block,
        &-ban {
          color: color('danger');
          &::before {
            @include mask(icon('block'));
            background-color: color('danger');
          }
        }
        &-watch-stream {
          &::before {
            @include mask(var(--twitch-logo), $size: 20px, $important: true);
          }
        }
        &-roles {
          &::before {
            @include mask(icon('user'), $important: true);
            // Needed in case the server has a role named 'Members' or some other
            // blacklisted term
            display: inline-block !important;
          }
        }
        &-search-with-google {
          &::before {
            @include mask(var(--google-logo), $size: 14px, $important: true);
          }
        }
        &-add-to-dictionary {
          &::before {
            @include mask(icon('book-opened'));
          }
        }
        &-join-server-title {
          &::before {
            @include mask(icon('handshake'), $size: 20px, $important: true);
          }
        }
        &-cut {
          &::before {
            @include mask(icon('cut'), $size: 16px, $important: true);
          }
        }
        &-create-server-button-cta {
          &::before {
            @include mask(icon('tools'));
          }
        }
        &-unblock {
          &::before {
            // TODO: Replace this when you find an unblock icon
            @include mask(var(--unblock-icon), $size: 16px, $important: true);
          }
        }
        &-game-feed-settings-visibility {
          &::before {
            @include mask(icon('game-controller'), $important: true);
          }
        }
        // TODO: Add a proper icon
        &-transfer-ownership {
          &::before {
            @include mask(icon(''));
          }
        }
        &-move-to {
          &::before {
            @include mask(icon('reply'), $size: 1.8rem, $important: true);
          }
        }
        &-add-note,
        &-edit-note,
        &-change-nickname,
        &-edit-message,
        &-edit-channel,
        &-edit-category {
          &::before {
            @include mask(icon('edit'), $size: 22px, $important: true);
          }
        }
        &-remove-friend,
        &-remove-from-group,
        &-delete-message-title,
        &-delete-channel,
        &-delete-category,
        &-delete-message {
          &::before {
            @include mask(icon('garbage'), $size: 22px, $important: true);
          }
        }
        &-collapse-category {
          &::before {
            @include mask(icon('fullscreen-deactivate'), $size: 2.8rem, $important: true);
          }
        }
        &-close-dm {
          &::before {
            @include mask(icon('close-thick'), $size: 22px, $important: true);
          }
        }
        &-call {
          &::before {
            @include mask(icon('phone'), $size: 1.7rem, $important: true);
          }
        }
        &-profile {
          &::before {
            @include mask(icon('profile'));
          }
        }
        &-leave-server,
        &-leave-group-dm {
          &::before {
            @include mask(icon('logout'));
            width: 24px;
            margin-right: 7px;
          }
        }
        &-pin-message,
        &-guild-settings-action-filter-message-pin {
          &::before {
            @include mask(icon('thumbtack'), $size: 16px, $important: true);
          }
        }
        &-add-reaction,
        &-reactions {
          &::before {
            @include mask(icon('emoji'), $important: true);
          }
        }
        &-remove-all-reactions {
          &::before {
            @include mask(icon('emoji-frown'), $size: 16px, $important: true);
          }
        }
        &-twitch-emote-add-to-favorites {
          &::before {
            @include mask(icon('star-solid'), $size: 20px, $important: true);
          }
        }
        &-copy,
        &-clone-channel,
        &-screenshare-change-windows {
          &::before {
            @include mask(icon('copy'));
          }
        }
        &-copy-id {
          &::before {
            @include mask(icon('user-id'));
          }
        }
        &-copy-message-link,
        &-copy-link {
          &::before {
            @include mask(icon('link'));
          }
        }
        // 'Play Game'
        &-application-context-menu-launch {
          &::before {
            @include mask(icon('dpad'));
          }
        }
        &-open-link {
          &::before {
            @include mask(icon('open-new-window'), $size: 16px, $important: true);
          }
        }
        // False positive items... things like role names and server names
        &-members,
        &-member,
        &-other-reactions,
        &-windows,
        &-platform-linux,
        &-form-label-muted,
        &-recent-mentions-filter-everyone,
        &-recent-mentions-filter-roles {
          &::before {
            display: none;
          }
        }
      }
    }
    #{$contextmenuhint} {
      color: color('tint-7');
      opacity: 1;
    }
  }
  // Item with a toggle button
  #{$contextmenuitemtoggle} {
    #{$contextmenulabel} {
      flex: 1 1 auto;
      max-width: 250px;
      padding-right: 14px;
    }
    // item with a toggle button checkbox
    .checkbox {
      @include size(18px);
    }
  }
  // Item group adjustments
  #{$contextmenuitemgroup} {
    border-color: var(--border-color) !important;
    // Remove any empty item groups, not sure why they exist
    &:empty {
      display: none;
    }
    &:not(:empty) {
      padding: .8rem 0;
    }
    &:first-of-type {
      margin-top: .8rem;
      padding-top: 0;
    }
    &:last-of-type {
      margin-bottom: .8rem;
      padding-bottom: 0;
    }
    + #{$contextmenuitembase} {
      margin-top: -10px;
    }
  }
  // Scrollbar
  #{$scrollerwrap} {
    padding: 1px 1px 0 0;
  }
}
