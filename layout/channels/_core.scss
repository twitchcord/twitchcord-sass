///  main: _module.scss
///  ==========================================================================
///  Text/voice channels list section
///  ==========================================================================

:root {
  --category-border-color: transparent;
  --category-border-style: none;
  --category-border-width: 0rem;
  --category-border-radius: var(--channel-border-radius);
  --category-height: var(--channel-height);
  --category-font-size: 1.2rem;
  --category-font-weight: 700;
  --category-text-transform: uppercase;
  --category-color: var(--channel-color);
  --category-hover-color: var(--channel-hover-color);

  --category-icon-background-color: #{color('tint-7')};
  --category-icon-hover-background-color: #{color('tint-9')};
  --category-icon: #{icon('folder-opened')};
  --category-icon-size: 1.8rem;

  --category-collapsed-icon: #{icon('folder-closed')};

  --channel-border-radius: var(--component-border-radius);
  --channel-height: 2.8rem;
  --channel-color: #{color('tint-8')};
  --channel-hover-color: #{color('tint-10')};
  --channel-icon-color: #{color('tint-8')};
  --channel-icon-hover-color: #{color('tint-10')};

}

// Channels outer container
#{classes('layout.channels.channels')} {
  z-index: 0;
  width: var(--channels-width);
  margin: var(--layout-gutter-size, 0);
  overflow: hidden !important;
  background: var(--channels-color, none);
  border-right: 1px solid var(--border-color);
  border-radius: 0 !important;
  // Account panel bottom left
  #{classes('layout.channels.accountPanel.container')} {
    display: none;
  }
  // Channels inner container
  #{classes('layout.channels.channelsInnerContainer')} {
    background: none;
  }
  // Unread mentions/messages bar container
  #{classes('layout.channels.unreadBarContainer')} {
    height: calc(var(--unread-bar-height) * 1.2) !important;
    padding: 0 1rem;
    // Top unread mentions/messages
    &#{classes('layout.channels.unreadBarTop')} {
      top: 1rem;
    }
    // Bottom unread mentions/messages
    &#{classes('layout.channels.unreadBarBottom')} {
      bottom: 1rem;
    }
  }
  // Unread mentions/messages bar
  #{classes('layout.channels.unreadBar')} {
    display: flex;
    height: calc(var(--unread-bar-height) * 1.2) !important;
  }
  // Server channel header dropdown button thing
  #{classes('layout.channels.serverHeaderContainer')} {
    display: none;
  }
  #{classes('layout.channels.scroller')} {
    overflow-x: hidden;
    // Temporary fix to get rid of channel headers for Verified servers
    > div:first-of-type[style*='height: 78px;'] {
      height: 0 !important;
    }
    // container-0, container-1, container-2, etc.
    > [class|='container'] {
      margin: 0;
      // Seems to sometimes exist in 'container-0' when there is no category
      > div[style*='height: 16px;'] {
        height: 0 !important;
      }
    }
  }
  #{classes('layout.channels.scrollerWrap')} {
    padding: 1px 1px 0 0;
  }
  // Unread channel indicator
  #{classes('layout.channels.channelUnreadIndicator')} {
    display: none;
  }
  // Channel # and speaker icons
  #{classes('layout.channels.channelIcon')} {
    @include size(1.4rem);
    margin: 0 0.3rem 0 0;
    color: color('tint-7') !important;
  }
  // Category container
  #{classes('layout.channels.categoryContainerDefault')},
  #{classes('layout.channels.channelContainerDragAfter')},
  #{classes('layout.channels.channelContainerDragBefore')} {
    height: var(--category-height);
    // To do when I get here:
    // the .5rem is 1.5rem (the left margin) minus (the scrollbar width + scrollerWrap padding)
    margin: 1.5rem .5rem 0 1.5rem;
    padding: 0;
    border-color: var(--category-border-color);
    border-style: var(--category-border-style);
    border-width: var(--category-border-width);
    box-shadow: var(--category-box-shadow);
    &:hover {
      // Show the create channel button on category hover
      #{classes('layout.channels.categoryChildren')} {
        visibility: visible;
      }
    }
  }
  // Channel not category container
  #{classes('layout.channels.channelContainer')},
  #{classes('layout.channels.channelContainerDragAfter')},
  #{classes('layout.channels.channelContainerDragBefore')} {
    margin: 0 .5rem 0 1.5rem;
    // Voice avatar container
    #{classes('layout.channels.voiceAvatarContainer')} {
      margin: 0 !important;
    }
    // Muted / defeaned icons
    #{classes('layout.channels.voiceIconSpacing')} {
      margin: 0 5px 0 0;
      &:last-of-type {
        margin: 0;
      }
    }
  }
  // Category wrapper
  #{classes('layout.channels.categoryWrapper')} {
    align-items: center;
    height: var(--channel-height);
    margin: 0;
    padding: 0 0.5rem 0 0;
    border-radius: var(--category-border-radius);
    box-shadow: none;
    // Category folder icon
    &::before {
      @include mask(var(--category-icon), var(--category-icon-background-color));
      @include size(var(--category-icon-size));
      content: '';
      position: relative;
      display: inline-flex;
      flex: 0 0 auto;
      order: 2;
      margin: 0 .4rem 0 .6rem;
    }
    &:hover {
      background: color('tint-3');
      #{classes('layout.channels.categoryName')} {
        color: var(--category-hover-color) !important;
      }
       // Category folder icon
      &::before {
        background-color: var(--category-icon-hover-background-color);
      }
      // Category arrow icon
      #{classes('layout.channels.categoryArrowIcon')} {
        background-color: var(--category-icon-hover-background-color);
      }
    }
  }
  // Category arrow icon
  #{classes('layout.channels.categoryArrowIcon')} {
    @include mask(icon('caret-down'), var(--category-icon-background-color), var(--category-icon-size));
    @include size(2rem!important);
    position: relative;
    top: 0;
    left: 0;
    display: none;
    flex: 0 0 auto;
    order: 1;
    margin: 0;
    transition: transform 0.2s;
    transform: none;
    path {
      display: none;
    }
  }
  // We had to set transform to none above to prevent a background color
  // flashing issue when the arrows were loaded in
  #{classes('layout.channels.categoryCollapsed')} {
    // Category folder icon
    &::before {
      @include mask(var(--category-collapsed-icon), var(--category-icon-background-color));
    }
    // Category arrow icon
    #{classes('layout.channels.categoryArrowIcon')} {
      transform: rotate3d(0, 0, -1, 90deg);
    }
  }
  // Category name text
  #{classes('layout.channels.categoryName')} {
    @include ellipsis(100%, inline-block);
    order: 3;
    font-size: var(--category-font-size);
    font-weight: var(--category-font-weight);
    color: var(--category-color) !important;
    text-transform: var(--category-text-transform);
  }
  #{classes('layout.channels.wrapper')} {
    height: var(--channel-height);
  }
  #{classes('layout.channels.voiceList')} {
    padding: 5px 0 0 24px;
  }
  // Container with no category
  #{classes('layout.channels.container0')} {
    margin: 15px 0 0 !important;
    padding: 0 !important;
    #{classes('layout.channels.channelContent')} {
      padding: 0 1rem 0 0.5rem;
    }
    // Fix for margin on voice channels with no category
    #{classes('layout.channels.voiceList')} {
      margin-left: 17px;
    }
    // Fix for spacing of voice chat users in voice channels with no category
    #{classes('layout.channels.voiceUserContainer')} {
      margin-left: 6px;
    }
  }
  // Edit channel, Create instant invite buttons container
  #{classes('layout.channels.channelChildren')} {
    margin: 0 -0.4rem 0 0.4rem;
  }
  // Edit channel, Create instant invite buttons
  #{classes('layout.channels.channelActionIcon')} {
    opacity: 1;
    &:active {
      transform: none;
    }
  }
  // Create instant invite svg
  svg[name='Invite'] {
    @include mask(icon('user-add'), var('channel-icon-color'), 1.9rem);
    opacity: 1;
    &:hover {
      background-color: color('white');
      opacity: 1;
    }
    path {
      display: none !important;
    }
  }
  // Channel settings svg
  svg[name='Gear'] {
    @include mask(icon('gear'), var('channel-icon-color'), 1.8rem);
    opacity: 1;
    &:hover {
      background-color: color('white');
      opacity: 1;
    }
    path {
      display: none !important;
    }
  }
  // Create channel button container
  #{classes('layout.channels.categoryChildren')} {
    order: 3;
    visibility: hidden;
  }
  // Create channel button
  #{classes('layout.channels.categoryAddButton')} {
    &#{classes('components.buttons.button')} {
      @include size(auto);
      line-height: 1;
      background: none !important;
      border: none !important;
      box-shadow: none !important;
      #{classes('components.buttons.contents')} {
        padding: 0;
      }
    }
    &:hover {
      #{classes('layout.channels.categoryAddButtonIcon')} {
        background-color: color('white');
      }
    }
  }
  // Create channel button icon
  #{classes('layout.channels.categoryAddButtonIcon')} {
    @include mask(icon('plus'), var(--category-icon-hover-background-color), 1.4rem);
    opacity: 1;
    polygon {
      display: none;
    }
  }
  // Channel content container
  #{classes('layout.channels.channelContent')} {
    @include size(100%, var(--channel-height));
    margin: 0;
    padding: 0 1rem 0 0.6rem;
    border-radius: var(--channel-border-radius);
  }
  // Channel names (text and voice)
  #{classes('layout.channels.channelName')} {
    font-size: 1.4rem;
    font-weight: 400;
    line-height: var(--channel-height);
    color: var(--channel-color) !important;
  }
  #{classes('layout.channels.channelWrapper')} {
    height: var(--channel-height);
    &:active {
      #{classes('layout.channels.channelContent')} {
        background: color('primary-3');
      }
    }
    &:hover {
      #{classes('layout.channels.channelContent')} {
        background: color('tint-3');
      }
    }
    &:not(#{classes('layout.channels.channelUnread')}):not(#{classes('layout.channels.channelSelected')}) {
      &:hover {
        #{classes('layout.channels.channelName')} {
          color: var(--channel-hover-color) !important;
        }
        #{classes('layout.channels.channelIcon')} {
          color: var(--channel-icon-hover-color) !important;
        }
      }
    }
    // Selected channel
    &#{classes('layout.channels.channelSelected')} {
      #{classes('layout.channels.channelName')},
      #{classes('layout.channels.channelIcon')} {
        color: color('white') !important;
      }
      &:hover {
        #{classes('layout.channels.channelContent')} {
          background: color('tint-2');
        }
      }
      #{classes('layout.channels.channelContent')} {
        background: color('tint-2');
      }
    }
    // Unread channel
    &#{classes('layout.channels.channelUnread')} {
      #{classes('layout.channels.channelName')},
      #{classes('layout.channels.channelIcon')} {
        color: color('white') !important;
      }
    }
    // Lowered opacity for locked and muted channels
    &#{classes('layout.channels.channelMuted')} {
      opacity: 0.5;
    }
    &#{classes('layout.channels.channelLocked')} {
      overflow: visible;
      &::before {
        @include ellipsis(100%);
        @include localize('You do not have access to this room');
        position: absolute;
        top: 0;
        width: 100%;
        margin-top: calc((var(--channel-height) + var(--tooltip-arrow-size)) * -1);
        padding: var(--tooltip-padding);
        font-size: var(--tooltip-font-size);
        font-weight: var(--tooltip-font-weight);
        line-height: 1.5;
        color: var(--tooltip-color);
        text-align: center;
        background: var(--tooltip-background);
        border: var(--tooltip-border);
        border-radius: var(--tooltip-roundness);
        box-shadow: var(--tooltip-shadow);
      }
      &::after {
        @include triangle(bottom, var(--tooltip-background), var(--tooltip-arrow-size));
        position: absolute;
        top: 100%;
        left: 50%;
        margin: calc((var(--channel-height) + var(--tooltip-arrow-size) + 0.2rem) * -1) 0 0 calc(var(--tooltip-arrow-size) * -1);
      }
      &::before,
      &::after {
        z-index: var(--tooltip-z-index);
        display: none;
        pointer-events: none;
        animation: var(--disable-animations, var(--disable-tooltip-animation, var(--tooltip-animation)));
      }
      &:hover {
        &::before,
        &::after {
          display: block;
        }
      }
    }
  }
  // Voice chat avatars
  #{classes('layout.channels.voiceAvatar')},
  #{classes('layout.channels.voiceAvatarSpeaking')} {
    margin-left: 0;
    border-radius: var('avatar-border-radius');
  }
  #{classes('layout.channels.voiceAvatar')} {
    position: relative;
    background-color: transparent;
    border: 2px solid transparent;
    box-shadow: none;
  }
  #{classes('layout.channels.voiceAvatarSpeaking')} {
    z-index: 2;
    border: 2px solid #393 !important;
    outline: none;
    box-shadow: none;
    animation: avatarSpeakingGlowGreen 800ms ease-out infinite alternate;
  }
  // Voice chat names
  #{classes('layout.channels.voiceUsername')},
  #{classes('layout.channels.voiceUsernameSpeaking')} {
    padding: 0 8px 0 5px;
    font-size: 1.2rem;
    color: var(--channel-color);
    &:hover {
      color: color('primary-10');
    }
  }
  // Mentions badge
  #{classes('layout.channels.badge')} {
    min-width: 15px;
    margin: 0 2px 0 4px;
  }
  // Voice channel count indication
  // https://i.imgur.com/HlGCRyb.png
  #{classes('layout.channels.voiceLimitWrapper')} {
    height: auto;
    margin-right: -4px;
    padding: 0 5px;
    font-size: 1.1rem;
    color: var(--channel-color);
    background-color: color('tint-2');
    border: 1px solid var(--border-color);
    border-radius: var(--component-border-radius);
  }
  #{classes('layout.channels.voiceLimitUsers')} {
    width: auto;
    padding: 0;
    line-height: 1.5;
    background: none !important;
    &::after {
      content: '/';
      display: inline-block;
      padding: 0 0.3rem 0;
      line-height: 1.5;
    }
  }
  #{classes('layout.channels.voiceLimitTotal')} {
    width: auto;
    padding: 0;
    line-height: 1.5;
    background: none !important;
    &::after {
      display: none;
    }
  }
  #{classes('layout.channels.channelContainerDragAfter')},
  #{classes('layout.channels.channelContainerDragBefore')} {
    // @include size(100%, var(--channel-height));
    // #{classes('layout.channels.channelContent')} {
    //   background: color('black', .2);
    //   border: color('white', .1) var(--guild-placeholder-border-style) var(--guild-placeholder-border-width);
    // }
    &::before,
    &::after {
      @include size(100%, var(--channel-height));
      position: relative;
      right: 0;
      left: 0;
      display: block;
      background: color('black', .2);
      border: color('white', .1) var(--guild-placeholder-border-style) var(--guild-placeholder-border-width);
    }
  }
  .panels-j1Uci_ {
    display: flex;
    flex-flow: column wrap;
    background: none;
  }
}
